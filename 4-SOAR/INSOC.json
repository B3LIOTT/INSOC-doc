{
  "name": "INSOC",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "7ceae612-e110-4adf-8191-95557ec9b251",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3400,
        340
      ],
      "id": "603d5723-e3b9-49ab-b847-ee448feb55f3",
      "name": "Webhook",
      "webhookId": "7ceae612-e110-4adf-8191-95557ec9b251"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bead66af-9be4-4285-8dd0-fb9cdad3743c",
              "leftValue": "={{ $json.body.rule.level }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -3180,
        -40
      ],
      "id": "d6d84aea-2115-4de4-b80f-94a51807f1dc",
      "name": ">=MEDIUM alerts filter"
    },
    {
      "parameters": {
        "resource": "case",
        "operation": "create",
        "title": "=CASE - {{ $('ALERT').item.json.tags.join(',') }}",
        "description": "=Groups alerts with same tags: {{ $('ALERT').item.json.tags.join(',') }}",
        "severity": "={{ $('ALERT').item.json.severity }}",
        "startDate": "={{ $('ALERT').item.json.createdAt }}",
        "owner": "user@wazuh.fr",
        "tlp": "={{ 2 }}",
        "tags": "={{ $('ALERT').item.json.tags.join(',') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -1120,
        240
      ],
      "id": "ed18ad34-d593-46f4-a3bb-f0fbbdc8f628",
      "name": "CREATE CASE",
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "merge",
        "id": "={{ $('ALERT').item.json.id }}",
        "caseId": "={{ $json._id }}"
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -980,
        460
      ],
      "id": "3b334b65-9355-4949-adc8-5860aea673ad",
      "name": "MERGE TO CASE",
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "case",
        "operation": "count",
        "filters": {
          "severity": "={{ $json.severity }}",
          "tags": "={{ $json.tags.join(',') }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -1480,
        340
      ],
      "id": "5f23d72d-d6a4-4355-a5b0-9580435946c1",
      "name": "CASE EXISTS",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "case",
        "limit": 1,
        "options": {},
        "filters": {
          "tags": "={{ $('ALERT').item.json.tags[0] }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -1120,
        460
      ],
      "id": "b6085e47-052e-43f7-92d6-dde3b50d3691",
      "name": "GET CASE",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# creates a uuid for each alert\nimport uuid\n\ndata = _input.first().json.body\ndata.sourceRef = str(uuid.uuid4())\nreturn data"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1780,
        340
      ],
      "id": "57fbacec-3e57-4c27-bb79-dcb45ec05a8a",
      "name": "uuid"
    },
    {
      "parameters": {
        "title": "={{ $json.rule.description }}",
        "description": "=Alert from - {{ $json.agent.name }}",
        "severity": "={{ $json.rule.level }}",
        "date": "={{ $json.timestamp }}",
        "tags": "={{ $json.rule.groups.join(',') }}",
        "tlp": "={{ $json.rule.level }}",
        "type": "={{ $json.rule.id }}",
        "source": "={{ $json.agent.ip }}",
        "sourceRef": "=alert-{{ $json.sourceRef }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -1620,
        340
      ],
      "id": "f0a16049-dbd9-4028-a859-6cb018af1b72",
      "name": "ALERT",
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "create",
        "caseId": "={{ $('COUNTER IPs').item.json.id }}",
        "dataType": "ip",
        "data": "={{ $('COUNTER IPs').item.json.next_ip }}",
        "message": "ip",
        "startDate": "={{ $('COUNTER IPs').item.json.date }}",
        "status": "Ok",
        "options": {}
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        280,
        0
      ],
      "id": "b4bbc849-bee1-4ea5-9dbc-d9334de1c57a",
      "name": "ADD OBSERVABLES",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\n// data.body.agent.ip = \"34.35.36.37\"\ndata.body.malicious_ip = \"62.63.230.241\"\n// data.body.malicious_domain1 = \"http://hecker.io\"\n// data.body.malicious_domain2 = \"http://hecker2222.io\"\n\nreturn data"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3000,
        340
      ],
      "id": "05992c9b-b0d0-471b-9153-32ac96e0c8cb",
      "name": "TEST MALICIOUS IP",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b49a9a66-a443-493c-949b-a946ef155513",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1320,
        340
      ],
      "id": "b446eb33-3353-499a-ab08-00fe8857dd47",
      "name": "IF CASE DO NOT EXISTS"
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "executeAnalyzer",
        "id": "={{ $json.id }}",
        "dataType": "ip",
        "analyzers": [
          "93572ea5d34d9ba2b7f9446aabf6345d::Kifarunix-demo Cortex"
        ]
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        440,
        0
      ],
      "id": "6348537c-1170-4085-af03-5de8b5f4d09c",
      "name": "EXEC ANALYZER",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "75a55d45-25b0-4581-b969-297436b1588f",
              "leftValue": "={{ $json.artifacts.ips }}",
              "rightValue": 0,
              "operator": {
                "type": "array",
                "operation": "lengthGt",
                "rightType": "number"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -380,
        160
      ],
      "id": "fc6f01c4-c1de-4d51-8689-e831b27ed2be",
      "name": "Filter IPs"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "75a55d45-25b0-4581-b969-297436b1588f",
              "leftValue": "={{ $json.artifacts.urls }}",
              "rightValue": 0,
              "operator": {
                "type": "array",
                "operation": "lengthGt",
                "rightType": "number"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -380,
        580
      ],
      "id": "27043119-53ea-4250-bf91-85986f8cf43e",
      "name": "Filter URLs"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "75a55d45-25b0-4581-b969-297436b1588f",
              "leftValue": "={{ $json.artifacts.domains }}",
              "rightValue": 0,
              "operator": {
                "type": "array",
                "operation": "lengthGt",
                "rightType": "number"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -380,
        1040
      ],
      "id": "4167d926-96c9-4cb3-83b1-e7081e4d23a0",
      "name": "Filter DOMAINs"
    },
    {
      "parameters": {
        "jsCode": "// Check if it's an external IP\nfunction isExternalIP(ip) {\n    const privateRanges = [\n        /^10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,        // 10.0.0.0 - 10.255.255.255\n        /^172\\.(1[6-9]|2[0-9]|3[0-1])\\.\\d{1,3}\\.\\d{1,3}$/, // 172.16.0.0 - 172.31.255.255\n        /^192\\.168\\.\\d{1,3}\\.\\d{1,3}$/,           // 192.168.0.0 - 192.168.255.255\n        /^127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,       // 127.0.0.0 - 127.255.255.255 (loopback)\n        /^169\\.254\\.\\d{1,3}\\.\\d{1,3}$/,           // 169.254.0.0 - 169.254.255.255 (link-local)\n        /^0\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,         // 0.0.0.0/8 (reserved)\n        /^255\\.255\\.255\\.255$/                    // Broadcast address\n    ];\n\n    return !privateRanges.some(range => range.test(ip));\n}\n\nfunction extractArtifacts() {\n    const ipRegex = /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b/g;\n    const urlRegex = /https?:\\/\\/(?:[-\\w@:%._\\+~#=]{1,256}\\.[\\w()]{1,6}\\b(?:[-\\w()@:%_\\+.~#?&\\/=]*))/g\n\n    // Get the items array from n8n input\n    const inputArray = $input.first().json.body;\n    let artifactsDict = {};\n    artifactsDict.artifacts = {}\n\n    // Convert item to string if it's not already\n    const formatAlt = JSON.stringify(inputArray, null, 2);\n\n    const allIps = formatAlt.match(ipRegex) || [];\n    artifactsDict.artifacts.ips = allIps.filter(isExternalIP); // Get only external IPs\n    artifactsDict.artifacts.urls = formatAlt.match(urlRegex) || [];\n\n    // Extract domains from URLs using simple string manipulation\n    artifactsDict.artifacts.domains = artifactsDict.artifacts.urls.map(url => {\n    // Remove protocol (http:// or https://)\n    let domain = url.split('//')[1];\n    // Get the domain part (everything before the first slash)\n    domain = domain.split('/')[0];\n    // Remove port if present\n    domain = domain.split(':')[0];\n    return domain;\n    });\n\n    return artifactsDict;\n}\n\n\n// Input data\nconst data = $input.first().json;\n\nconst dict = extractArtifacts();\ndata.body = dict;\ndata.body.counter_ips = dict.artifacts.ips.length;\ndata.body.counter_urls = dict.artifacts.urls.length;\ndata.body.counter_domains = dict.artifacts.domains.length;\n\nreturn { json: data.body };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2820,
        600
      ],
      "id": "bb3153cb-0b32-421f-9a7b-3aca71ae1868",
      "name": "Artifacts detection"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -640,
        580
      ],
      "id": "1a04bf3a-0b30-4abd-a864-e61ad6444d7b",
      "name": "Merge"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "return {\n  'id': _input.first().json.id,\n  'date': _input.first().json.createdAt\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -820,
        460
      ],
      "id": "48a10231-8bba-4b8a-a3da-9dfe7df6038c",
      "name": "CASE ID"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "counter = _input.first().json.counter_urls - 1\n_input.first().json.counter_urls = counter\nnext_url = _input.first().json.artifacts.urls[counter]\n\nreturn dict(_input.first().json) | {'next_url': next_url}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        580
      ],
      "id": "3945dd40-66ea-4043-be53-7ad107bec418",
      "name": "COUNTER URLs"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "counter = _input.first().json.counter_ips - 1\n_input.first().json.counter_ips = counter\nnext_ip = _input.first().json.artifacts.ips[counter]\n\nreturn dict(_input.first().json) | {'next_ip': next_ip}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        160
      ],
      "id": "37199207-4082-4bd6-9815-dfe952033ada",
      "name": "COUNTER IPs"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "counter = _input.first().json.counter_domains - 1\n_input.first().json.counter_domains = counter\nnext_domain = _input.first().json.artifacts.domains[counter]\n\nreturn dict(_input.first().json) | {'next_domain': next_domain}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -200,
        1040
      ],
      "id": "40dfc4ef-38a3-415c-b53b-07bffa0b1322",
      "name": "COUNTER DOMAINs"
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "count",
        "filters": {
          "data": "={{ $json.next_ip }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "ff6aaed9-7899-4fbb-b599-7731842801a0",
      "name": "OBSERVABLE EXISTS",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "564ff8c5-fd5d-4a58-a8c6-388eddd34b74",
              "leftValue": "={{ $json.counter_ips }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        160
      ],
      "id": "41507e72-723d-49b8-b83b-be4bc45cc42b",
      "name": "loop condition"
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "create",
        "caseId": "={{ $('COUNTER URLs').item.json.id }}",
        "dataType": "url",
        "data": "={{ $('COUNTER URLs').item.json.next_url }}",
        "message": "url",
        "startDate": "={{ $('COUNTER URLs').item.json.date }}",
        "status": "Ok",
        "options": {}
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        280,
        460
      ],
      "id": "12998b35-06f3-4140-9541-c0405863c0d9",
      "name": "ADD OBSERVABLES1",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "executeAnalyzer",
        "id": "={{ $json.id }}",
        "dataType": "url",
        "analyzers": [
          "d33efdda2d1f2aca7f2c06f71d9f8578::Kifarunix-demo Cortex"
        ]
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        440,
        460
      ],
      "id": "56182b01-35eb-456d-af2d-1797f1f1bb2d",
      "name": "EXEC ANALYZER1",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "count",
        "filters": {
          "data": "={{ $json.next_url }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        0,
        460
      ],
      "id": "e2884b57-9fe4-4a22-b3c2-2d488799550f",
      "name": "OBSERVABLE EXISTS1",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "564ff8c5-fd5d-4a58-a8c6-388eddd34b74",
              "leftValue": "={{ $json.counter_urls }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        740,
        580
      ],
      "id": "f13dc59f-5d4f-4eae-bea5-7a30f57223b1",
      "name": "loop condition1"
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "create",
        "caseId": "={{ $('COUNTER DOMAINs').item.json.id }}",
        "dataType": "domain",
        "data": "={{ $('COUNTER DOMAINs').item.json.next_domain }}",
        "message": "domain",
        "startDate": "={{ $('COUNTER DOMAINs').item.json.date }}",
        "status": "Ok",
        "options": {}
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        300,
        900
      ],
      "id": "f4fd843a-094f-4c2b-96d8-7601aa7bac90",
      "name": "ADD OBSERVABLES2",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "count",
        "filters": {
          "data": "={{ $json.next_domain }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -20,
        900
      ],
      "id": "3eabc2e2-819d-4346-9efa-40f80d65184b",
      "name": "OBSERVABLE EXISTS2",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "564ff8c5-fd5d-4a58-a8c6-388eddd34b74",
              "leftValue": "={{ $json.counter_domains }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        740,
        1040
      ],
      "id": "df299698-8998-487b-a1d9-5a7efbdebe7c",
      "name": "loop condition2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b092e62-cde5-4e65-b612-1d88c03fc8ff",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        140,
        0
      ],
      "id": "09976e85-f5b8-4b96-8c74-e8e8b26b6b78",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b092e62-cde5-4e65-b612-1d88c03fc8ff",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        140,
        460
      ],
      "id": "cec5ccc4-9e0a-46f8-a1ce-a6a1bbaf919b",
      "name": "Filter1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b092e62-cde5-4e65-b612-1d88c03fc8ff",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        140,
        900
      ],
      "id": "130f0bce-937e-4079-bdb5-f11570545b5e",
      "name": "Filter2"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "data = _input.first().json\nlevel = data.body.rule.level\n\nnew_level = 1\nif 5 < level <= 10:\n  new_level = 2\nelif 10 < level:\n  new_level = 3\n\ndata.body.rule.level = new_level\n\nreturn data"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3220,
        340
      ],
      "id": "cfa31f9f-0957-4f1b-b695-e9c2f3798dcc",
      "name": "NORMALISE"
    },
    {
      "parameters": {
        "resource": "observable",
        "operation": "executeAnalyzer",
        "id": "={{ $json.id }}",
        "dataType": "url",
        "analyzers": [
          "d33efdda2d1f2aca7f2c06f71d9f8578::Kifarunix-demo Cortex"
        ]
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        480,
        900
      ],
      "id": "ca529252-7368-47a6-b5e1-1f0b85fc82ba",
      "name": "EXEC ANALYZER2",
      "alwaysOutputData": true,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const tma = new Date(Date.now() - 10 * 60 * 1000).toISOString()\nreturn {\"10MinAgo\": tma}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2820,
        180
      ],
      "id": "a00b662c-986a-49ff-a654-6cbc169e5668",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "return $('NORMALISE').first()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        340
      ],
      "id": "2ae10ed5-9c4f-4f23-92d3-92d21114be84",
      "name": "REFORMAT"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b45aebd3-9c7f-493f-8066-df9909439043",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2540,
        180
      ],
      "id": "62a2a32f-6c30-4213-b2fb-fb23667b92da",
      "name": "EXISTS"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.7.15:9000/api/v1/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "theHiveApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": [\n    {\n      \"_name\": \"listAlert\"\n    }, \n    {\n      \"_name\": \"filter\", \n      \"_eq\": {\n        \"_field\": \"title\", \n        \"_value\": \"A Newly Scheduled Task has been Detected on win11\"\n      }\n    },\n    {\n      \"_name\": \"count\"\n    }\n  ]\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "count"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2740,
        -200
      ],
      "id": "6192fa8b-1163-4b29-bc25-a8307d9bd610",
      "name": "COUNT ALERTS",
      "alwaysOutputData": false,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.7.15:9000/api/v1/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "theHiveApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": [{\"_name\": \"listAlert\"}, {\"_name\": \"filter\", \"_eq\": {\"_field\": \"title\", \"_value\": \"A Newly Scheduled Task has been Detected on win11\"}}]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2380,
        -200
      ],
      "id": "5822ab46-5798-4605-ac79-c0b96ea77844",
      "name": "GET ALERT",
      "alwaysOutputData": false,
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "return _input.first()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2220,
        100
      ],
      "id": "99ce496c-2e02-471d-8c04-58a78d3cdb2a",
      "name": "first"
    },
    {
      "parameters": {
        "operation": "deleteAlert",
        "alertId": {
          "__rl": true,
          "value": "={{ $json._id }}",
          "mode": "id"
        }
      },
      "type": "n8n-nodes-base.theHiveProject",
      "typeVersion": 1,
      "position": [
        -2080,
        100
      ],
      "id": "919d45ca-70d1-4bd7-b022-34a5ffd90413",
      "name": "TheHive 5",
      "credentials": {
        "theHiveProjectApi": {
          "id": "5PTWU9W34oGkig4w",
          "name": "The Hive 5 account"
        }
      }
    },
    {
      "parameters": {
        "operation": "count",
        "filters": {
          "title": "={{ $('TEST MALICIOUS IP').item.json.body.rule.description }}"
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -2680,
        180
      ],
      "id": "51ce2d5c-832a-4ce9-a0a2-d954495e7628",
      "name": "COUNT",
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 1,
        "options": {},
        "filters": {
          "title": ""
        }
      },
      "type": "n8n-nodes-base.theHive",
      "typeVersion": 1,
      "position": [
        -2360,
        100
      ],
      "id": "c0ea1b77-d315-4a1d-9527-17b5480b2e37",
      "name": "GET ALERT1",
      "credentials": {
        "theHiveApi": {
          "id": "50EY9TDbqyZZGghU",
          "name": "The Hive account 2"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "192.168.7.8:5678",
            "user-agent": "python-requests/2.32.2",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive",
            "content-type": "application/json",
            "content-length": "548"
          },
          "params": {},
          "query": {},
          "body": {
            "timestamp": "2025-01-30T11:36:46.629+0000",
            "rule": {
              "level": 3,
              "description": "Wazuh server started.",
              "id": "502",
              "firedtimes": 1,
              "mail": false,
              "groups": [
                "ossec"
              ],
              "pci_dss": [
                "10.6.1"
              ],
              "gpg13": [
                "10.1"
              ],
              "gdpr": [
                "IV_35.7.d"
              ],
              "hipaa": [
                "164.312.b"
              ],
              "nist_800_53": [
                "AU.6"
              ],
              "tsc": [
                "CC7.2",
                "CC7.3"
              ]
            },
            "agent": {
              "id": "000",
              "name": "ubuntuwazuh",
              "ip": "192.168.7.252"
            },
            "manager": {
              "name": "ubuntuwazuh"
            },
            "id": "1738237006.21229336",
            "full_log": "ossec: Manager started.",
            "decoder": {
              "name": "ossec"
            },
            "location": "wazuh-monitord"
          },
          "webhookUrl": "http://192.168.7.8:5678/webhook-test/7ceae612-e110-4adf-8191-95557ec9b251",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "NORMALISE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    ">=MEDIUM alerts filter": {
      "main": [
        []
      ]
    },
    "CASE EXISTS": {
      "main": [
        [
          {
            "node": "IF CASE DO NOT EXISTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET CASE": {
      "main": [
        [
          {
            "node": "MERGE TO CASE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CREATE CASE": {
      "main": [
        [
          {
            "node": "CASE ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uuid": {
      "main": [
        [
          {
            "node": "ALERT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ALERT": {
      "main": [
        [
          {
            "node": "CASE EXISTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEST MALICIOUS IP": {
      "main": [
        [
          {
            "node": "Artifacts detection",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MERGE TO CASE": {
      "main": [
        [
          {
            "node": "CASE ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ADD OBSERVABLES": {
      "main": [
        [
          {
            "node": "EXEC ANALYZER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF CASE DO NOT EXISTS": {
      "main": [
        [
          {
            "node": "CREATE CASE",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GET CASE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter IPs": {
      "main": [
        [
          {
            "node": "COUNTER IPs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter URLs": {
      "main": [
        [
          {
            "node": "COUNTER URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter DOMAINs": {
      "main": [
        [
          {
            "node": "COUNTER DOMAINs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Artifacts detection": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Filter IPs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Filter URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CASE ID": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COUNTER IPs": {
      "main": [
        [
          {
            "node": "OBSERVABLE EXISTS",
            "type": "main",
            "index": 0
          },
          {
            "node": "loop condition",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OBSERVABLE EXISTS": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop condition": {
      "main": [
        [],
        [
          {
            "node": "COUNTER IPs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ADD OBSERVABLES1": {
      "main": [
        [
          {
            "node": "EXEC ANALYZER1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OBSERVABLE EXISTS1": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop condition1": {
      "main": [
        [],
        [
          {
            "node": "COUNTER URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ADD OBSERVABLES2": {
      "main": [
        [
          {
            "node": "EXEC ANALYZER2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OBSERVABLE EXISTS2": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop condition2": {
      "main": [
        [],
        [
          {
            "node": "COUNTER DOMAINs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COUNTER URLs": {
      "main": [
        [
          {
            "node": "OBSERVABLE EXISTS1",
            "type": "main",
            "index": 0
          },
          {
            "node": "loop condition1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COUNTER DOMAINs": {
      "main": [
        [
          {
            "node": "OBSERVABLE EXISTS2",
            "type": "main",
            "index": 0
          },
          {
            "node": "loop condition2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "ADD OBSERVABLES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "ADD OBSERVABLES1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "ADD OBSERVABLES2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NORMALISE": {
      "main": [
        [
          {
            "node": "TEST MALICIOUS IP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "COUNT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "REFORMAT": {
      "main": [
        [
          {
            "node": "uuid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXISTS": {
      "main": [
        [
          {
            "node": "GET ALERT1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "REFORMAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COUNT ALERTS": {
      "main": [
        []
      ]
    },
    "GET ALERT": {
      "main": [
        []
      ]
    },
    "first": {
      "main": [
        [
          {
            "node": "TheHive 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TheHive 5": {
      "main": [
        [
          {
            "node": "REFORMAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COUNT": {
      "main": [
        [
          {
            "node": "EXISTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET ALERT1": {
      "main": [
        [
          {
            "node": "first",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d0e221a5-769c-4fe6-b981-36c74df079e7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6baf55508b4d196099e1f2124d31a760de61089e8e377d4d375be8f05dffdd2b"
  },
  "id": "mfYmPbdgLripvxNA",
  "tags": []
}